var version=function(e,n,a,t,i,d,r,l,s){"use strict";function o(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var g=o(n),c=o(a),u=o(s);const m={instanceVariable:"\n    {\n      instanceVariable(filter: {id: $id}) {\n        id\n        name {\n          languageCode\n          languageText\n        }\n        description {\n          languageCode\n          languageText\n        }\n        representedVariable {\n          id\n          name {\n            languageCode\n            languageText\n          }\n          description {\n            languageCode\n            languageText\n          }\n          variable {\n            id\n            name {\n              languageCode\n              languageText\n            }\n            description {\n              languageCode\n              languageText\n            }\n          }\n        }\n        reverseLineageFieldInstanceVariable {\n          id\n          name\n          smartGraph {\n            fromId\n            toId\n          }\n          smart {\n            id\n            name\n            lineageDataset {\n              id\n              reverseUnitDataSetLineage {\n                id\n                name {\n                  languageCode\n                  languageText\n                }\n                description {\n                  languageCode\n                  languageText\n                }\n                version\n                administrativeStatus\n                valuation\n                createdBy\n                lastUpdatedBy\n                metadataSourcePath\n                shortName\n                temporalityType\n                dataSetState\n                dataSourcePath\n              }\n            }\n          }\n        }\n      }\n    }\n  ",representedVariable:"\n    {\n      representedVariable(filter: {id: $id}) {\n        id\n        name {\n          languageCode\n          languageText\n        }\n        description {\n          languageCode\n          languageText\n        }\n        variable {\n          id\n          name {\n            languageCode\n            languageText\n          }\n          description {\n            languageCode\n            languageText\n          }\n        }\n        reverseInstanceVariableRepresentedVariable {\n          id\n          name {\n            languageText\n            languageCode\n          }\n          description {\n            languageCode\n            languageText\n          }\n          reverseLineageFieldInstanceVariable {\n            id\n            name\n            smartGraph {\n              fromId\n              toId\n            }\n            smart {\n              id\n              name\n              lineageDataset {\n                id\n                reverseUnitDataSetLineage {\n                  id\n                  name {\n                    languageText\n                    languageCode\n                  }\n                  description {\n                    languageText\n                    languageCode\n                  }\n                  version\n                  administrativeStatus\n                  valuation\n                  createdBy\n                  lastUpdatedBy\n                  metadataSourcePath\n                  shortName\n                  temporalityType\n                  dataSetState\n                  dataSourcePath\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ",variable:"\n    {\n      variable(filter: {id: $id}) {\n        id\n        name {\n          languageCode\n          languageText\n        }\n        description {\n          languageCode\n          languageText\n        }\n        reverseRepresentedVariableVariable {\n          id\n          name {\n            languageText\n            languageCode\n          }\n          description {\n            languageCode\n            languageText\n          }\n          reverseInstanceVariableRepresentedVariable {\n            id\n            name {\n              languageText\n              languageCode\n            }\n            description {\n              languageCode\n              languageText\n            }\n            reverseLineageFieldInstanceVariable {\n              id\n              name\n              smartGraph {\n                fromId\n                toId\n              }\n              smart {\n                id\n                name\n                lineageDataset {\n                  id\n                  reverseUnitDataSetLineage {\n                    id\n                    name {\n                      languageText\n                      languageCode\n                    }\n                    description {\n                      languageText\n                      languageCode\n                    }\n                    version\n                    administrativeStatus\n                    valuation\n                    createdBy\n                    lastUpdatedBy\n                    metadataSourcePath\n                    shortName\n                    temporalityType\n                    dataSetState\n                    dataSourcePath\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "},p="/health/ready",h="instanceVariable",b="representedVariable",L="variable",T="name",f="description",E="unitDataSet",x={DATA_TYPE:["variable","dataset"],DATASET_TYPES:["unitDataSet"],VARIABLE_TYPES:["instanceVariable","representedVariable","variable"],SMART:["smart"],UNIT_DATA_SET:["lineageDataset","reverseUnitDataSetLineage"],LINEAGE_FIELDS:["unitDataSet","lineage","reverseLineageFieldLineageDataset"]},v={LF_IV:"reverseLineageFieldInstanceVariable",IV_RV:"reverseInstanceVariableRepresentedVariable",RV_V:"reverseRepresentedVariableVariable",UDS_L:"reverseUnitDataSetLineage"},S=new u.default({lightness:[.35,.5,.65]}),y={dataset:"diamond",instanceVariable:"triangle",representedVariable:"square",variable:"circle"},V=(e,n,a,t)=>n.reduce(((n,d)=>{const r={nodes:[],links:[]},l=(e,n)=>{0!==e.length&&e.forEach((e=>{const a=i.getNestedObject(e,x.SMART);let d=!1,l=!1;l=!(!e.hasOwnProperty("smartGraph")||1!==e.smartGraph.length)&&e.smartGraph[0].fromId,void 0!==a&&0!==a.length&&a.forEach((e=>{const a=i.getNestedObject(e,x.UNIT_DATA_SET);d=l&&l===e.id,void 0!==a&&0!==a.length&&a.forEach((e=>{r.nodes.push({size:300,id:e.id,color:S.hex(e.id),symbolType:y.dataset,fontWeight:d?"bold":"normal",nodeLabelName:i.getLocalizedGsimObjectText(t,e[T]),nodeLabelDescription:i.getLocalizedGsimObjectText(t,e[f])}),r.links.push({source:n,target:e.id,label:d?"*":""})}))}))}))},s=(e,n)=>{0!==e.length&&e.forEach((e=>{r.nodes.push({size:600,id:e.id,color:S.hex(e.id),symbolType:y.instanceVariable,nodeLabelName:i.getLocalizedGsimObjectText(t,e[T]),nodeLabelDescription:i.getLocalizedGsimObjectText(t,e[f])}),r.links.push({source:n,target:e.id}),l(e[v.LF_IV],e.id)}))};switch(a){case h:const n=d[a][v.LF_IV];if(l(n,e),d[a].hasOwnProperty(b)){const n=d[a][b];if(r.nodes.push({size:600,id:n.id,color:S.hex(n.id),symbolType:y.representedVariable,nodeLabelName:i.getLocalizedGsimObjectText(t,n[T]),nodeLabelDescription:i.getLocalizedGsimObjectText(t,n[f])}),r.links.push({source:n.id,target:e}),n.hasOwnProperty(L)){const e=n[L];r.nodes.push({size:600,id:e.id,color:S.hex(e.id),symbolType:y.variable,nodeLabelName:i.getLocalizedGsimObjectText(t,e[T]),nodeLabelDescription:i.getLocalizedGsimObjectText(t,e[f])}),r.links.push({source:e.id,target:n.id})}}break;case b:const o=d[a][v.IV_RV];if(s(o,e),d[a].hasOwnProperty(L)){const n=d[a][L];r.nodes.push({size:600,id:n.id,color:S.hex(n.id),symbolType:y.variable,nodeLabelName:i.getLocalizedGsimObjectText(t,n[T]),nodeLabelDescription:i.getLocalizedGsimObjectText(t,n[f])}),r.links.push({source:n.id,target:e})}break;case L:((e,n)=>{0!==e.length&&e.forEach((e=>{r.nodes.push({size:600,id:e.id,color:S.hex(e.id),symbolType:y.representedVariable,nodeLabelName:i.getLocalizedGsimObjectText(t,e[T]),nodeLabelDescription:i.getLocalizedGsimObjectText(t,e[f])}),r.links.push({source:n,target:e.id}),s(e[v.IV_RV],e.id)}))})(d[a][v.RV_V],e)}return r}),{}),G={API_ERROR_MESSAGE:{en:"Something went wrong, check settings",nb:"Noe gikk galt, sjekk innstillingene"},HEADER:{en:"Lineage Viewer",nb:"Sporingsvisning"},LEGEND:["variable","","dataset","representedVariable","","instanceVariable"],LINEAGE_FOR:{en:"Lineage for",nb:"Sporing av"}},D=new u.default({lightness:[.35,.5,.65]});function C({dataId:e,dataType:a,language:s}){const[o,c]=n.useState(!1),[u,p]=n.useState(!1),[v]=n.useState((C=window.screen.width,{nodeHighlightBehavior:!1,linkHighlightBehavior:!1,automaticRearrangeAfterDropNode:!1,staticGraph:!1,staticGraphWithDragAndDrop:!0,directed:!1,node:{labelProperty:e=>""===e.nodeLabelName||"-"===e.nodeLabelName?e.id:e.nodeLabelName,size:300,fontSize:16},link:{renderLabel:!0,fontSize:16,markerWidth:8,markerHeight:8,semanticStrokeWidth:!0,color:i.SSB_COLORS.GREY},d3:{linkStrength:2,gravity:-50,linkLength:50},width:(.75*C*.96).toFixed(0),height:800}));var C;const[I,{loading:O,error:z,data:N}]=d.useManualQuery("dataset"!==a?m[a]:"\n  {\n    unitDataSet(filter: {id: $id}) {\n      id\n      name {\n        languageCode\n        languageText\n      }\n      description {\n        languageCode\n        languageText\n      }\n      lineage {\n        id\n        reverseLineageFieldLineageDataset {\n          id\n          name\n          smartGraph {\n            fromId\n            toId\n          }\n          smart {\n            id\n            name\n            lineageDataset {\n              reverseUnitDataSetLineage {\n                id\n                name {\n                  languageCode\n                  languageText\n                }\n                description {\n                  languageCode\n                  languageText\n                }\n              }\n            }\n            instanceVariable {\n              id\n              representedVariable {\n                id\n                name {\n                  languageCode\n                  languageText\n                }\n                description {\n                  languageCode\n                  languageText\n                }\n                variable {\n                  id\n                  name {\n                    languageCode\n                    languageText\n                  }\n                  description {\n                    languageCode\n                    languageText\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n",{variables:{id:e}});n.useEffect((()=>{I().then((()=>null))}),[I]),n.useMemo((()=>{if(!O&&!z&&void 0!==N)if("dataset"!==a){const n=V(e,N,a,s),t={nodes:n.nodes.concat([{size:1500,id:e,color:D.hex(e),symbolType:y[a],nodeLabelName:i.getLocalizedGsimObjectText(s,N[0][a][T]),nodeLabelDescription:i.getLocalizedGsimObjectText(s,N[0][a][f])}]).filter(((e,n,a)=>a.findIndex((n=>n.id===e.id))===n)),links:n.links};c(t)}else{const n=((e,n,a)=>n.reduce(((n,t)=>{const d={nodes:[{id:e,size:1500,color:S.hex(e),symbolType:y.dataset,nodeLabelName:i.getLocalizedGsimObjectText(a,t[E][T]),nodeLabelDescription:i.getLocalizedGsimObjectText(a,t[E][f])}],links:[]},r=i.getNestedObject(t,x.LINEAGE_FIELDS);return void 0!==r&&0!==r.length&&(r.forEach((n=>{d.nodes.push({size:600,id:n.id,color:S.hex(n.id),nodeLabelName:n.name,nodeLabelDescription:"",symbolType:y.instanceVariable}),d.links.push({source:n.id,target:e}),n.smartGraph.forEach((e=>{d.links.push({source:e.fromId,target:e.toId})}))})),r.forEach((e=>{e.smart.forEach((e=>{0===d.nodes.filter((n=>n.id===e.id)).length&&d.nodes.push({size:300,id:e.id,color:S.hex(e.id),nodeLabelName:e.name,nodeLabelDescription:"",symbolType:y.instanceVariable});const n=i.getNestedObject(e,[h,b]),t=i.getNestedObject(e,[h,b,L]);void 0!==n&&(0===d.nodes.filter((e=>e.id===n.id)).length&&d.nodes.push({size:600,id:n.id,color:S.hex(n.id),symbolType:y.representedVariable,nodeLabelName:i.getLocalizedGsimObjectText(a,n[T]),nodeLabelDescription:i.getLocalizedGsimObjectText(a,n[f])}),d.links.push({source:n.id,target:e.id}),void 0!==t&&0===d.nodes.filter((e=>e.id===t.id)).length&&(d.nodes.push({size:600,id:t.id,color:S.hex(t.id),symbolType:y.variable,nodeLabelName:i.getLocalizedGsimObjectText(a,t[T]),nodeLabelDescription:i.getLocalizedGsimObjectText(a,t[f])}),d.links.push({source:t.id,target:n.id})))}))})),r.forEach((e=>{e.smart.forEach((e=>{e.lineageDataset.reverseUnitDataSetLineage.forEach((n=>{0===d.nodes.filter((e=>e.id===n.id)).length&&d.nodes.push({size:300,id:n.id,color:S.hex(n.id),symbolType:y.dataset,nodeLabelName:i.getLocalizedGsimObjectText(a,n[T]),nodeLabelDescription:i.getLocalizedGsimObjectText(a,n[f])}),d.links.push({source:n.id,target:e.id})}))}))}))),d}),{}))(e,N,s);c(n)}}),[O,z,N,e,a,s]);const k=e=>p(o.nodes.filter((n=>n.id===e))[0]),R=()=>p(!1);return o?g.default.createElement(t.Grid,null,g.default.createElement(t.Grid.Column,{width:12},g.default.createElement(t.Segment,{raised:!0},g.default.createElement(r.Graph,{id:"graph-id",data:o,config:v,onMouseOverNode:k,onMouseOutNode:R}),g.default.createElement(t.Rail,{attached:!0,internal:!0,position:"right",style:{height:"30%"}},g.default.createElement(t.Segment,null,g.default.createElement(t.Grid,null,[5,3,0,2].map((e=>g.default.createElement(t.Grid.Row,{key:e,style:{paddingTop:"0.5rem",paddingBottom:"0.5rem"}},g.default.createElement(t.Grid.Column,{width:2},g.default.createElement("svg",{width:"30",height:"30",version:"1.1",xmlns:"http://www.w3.org/2000/svg"},g.default.createElement("path",{transform:"translate(15, 15)",style:{fill:i.SSB_COLORS.GREY},d:l.symbol(l.symbols[e],300)()}))),g.default.createElement(t.Grid.Column,{width:14,verticalAlign:"middle"},`= ${G.LEGEND[e]}`))))))))),g.default.createElement(t.Grid.Column,{width:4},u&&g.default.createElement(t.Segment,{raised:!0},g.default.createElement(t.List,{relaxed:"very"},g.default.createElement(t.List.Item,{header:"Id",description:u.id}),g.default.createElement(t.List.Item,{header:"Name",description:u.nodeLabelName}),g.default.createElement(t.List.Item,{header:"Description",description:u.nodeLabelDescription}))))):null}const I=x.VARIABLE_TYPES.map((e=>({key:e,text:e,value:e}))).concat([{key:"dataset",text:"dataset",value:"dataset"}]);return e.LineageViewer=function({restApi:e,language:a}){const[d,r]=n.useState(!1),[l,s]=n.useState("Variable_DUMMY"),[o,u]=n.useState(x.VARIABLE_TYPES[2]),[{loading:m,error:h}]=c.default(`${e}${p}`,{useCache:!1});return n.useEffect((()=>{if(m||h)r(!1);else{const e=window.location.search,n=new URLSearchParams(e),a=n.get("id"),t=n.get("type");a&&null!==t&&(s(a),u(t)),r(!0)}}),[h,m]),g.default.createElement(g.default.Fragment,null,m?g.default.createElement(t.Loader,{active:!0,inline:"centered"}):h?g.default.createElement(i.ErrorMessage,{error:G.API_ERROR_MESSAGE[a],language:a}):d&&g.default.createElement(C,{dataId:l,dataType:o,language:a}),g.default.createElement(t.Divider,{hidden:!0}),g.default.createElement(t.Grid,null,g.default.createElement(t.Grid.Column,{width:3},g.default.createElement(t.Input,{fluid:!0,value:l,onFocus:e=>e.target.select(),onKeyPress:({key:e})=>"Enter"===e&&r(!0),onChange:(e,{value:n})=>{r(!1),s(n)}})),g.default.createElement(t.Grid.Column,{width:13},g.default.createElement(t.Dropdown,{selection:!0,value:o,options:I,onChange:(e,{value:n})=>{r(!1),u(n)}}))))},Object.defineProperty(e,"__esModule",{value:!0}),e}({},React,useAxios,semanticUiReact,daplaJsUtilities,graphqlHooks,reactD3Graph,d3Shape,ColorHash);
